@import 'variables';

@mixin adaptive-value($property, $maxSize, $minSize, $modeCode, $customContainer: $maxWidthContainer) {
   $sizeDiff: $maxSize - $minSize;
   @if $modeCode == 1 {
      // Если меньше контейнера
      #{$property}: $maxSize + px;
      @media (max-width: #{$maxWidthContainer + px}) {
         #{$property}: calc(#{$minSize + px} + #{$sizeDiff} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
      }
   } @else if $modeCode == 2 {
      // Если больше контейнера
      #{$property}: $maxSize + px;
      @media (min-width: #{$maxWidthContainer + px}) {
         #{$property}: calc(#{$minSize + px} + #{$sizeDiff} * ((100vw - 320px) / #{$maxWidth - 320}));
      }
   } @else if $modeCode == 3 {
      // Если передали максимальную ширину контейнера
      #{$property}: $maxSize + px;
      @media (max-width: #{$customContainer + px}) {
         #{$property}: calc(#{$minSize + px} + #{$sizeDiff} * ((100vw - 320px) / #{$customContainer - 320}));
      }
   } @else {
      // Всегда
      #{$property}: calc(#{$minSize + px} + #{$sizeDiff} * ((100vw - 320px) / #{$maxWidth - 320}));
   }
}

@mixin mobile-media-query-down($widthType: 'lg') {
   @media (max-width: #{map-get($breakpoints, $widthType) + px}) {
      @content;
   }
}

@mixin mobile-media-query-up($widthType: 'lg') {
   @media (min-width: #{map-get($breakpoints, $widthType) + px}) {
      @content;
   }
}

@mixin visible-element {
   visibility: visible;
   z-index: 1;
   opacity: 1;
   transition: var(--hover);
}

@mixin hidden-element() {
   visibility: hidden;
   z-index: -1;
   opacity: 0;
   transition: var(--hover);
}

@mixin hide-scrollbar() {
   &::-webkit-scrollbar { width: 0; } // Chrome 
   -ms-overflow-style: none;  // IE and Edge
  scrollbar-width: none;  // Firefox
}